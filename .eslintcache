[{"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\index.js":"1","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\reportWebVitals.js":"2","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\App.js":"3","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\index.js":"4","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insuranceDataView.js":"5","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insurance\\components\\insuranceDataGrid.js":"6","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insurance\\components\\insuranceDataFilter.js":"7","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insurance\\components\\insuranceDataGridColumn.js":"8","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\actions\\insuranceAction.js":"9","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\constants\\actionTypes.js":"10","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\service\\insuranceService.js":"11","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\store.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":767,"mtime":1610882613899,"results":"16","hashOfConfig":"14"},{"size":370,"mtime":1610885921361,"results":"17","hashOfConfig":"14"},{"size":757,"mtime":1610883545537,"results":"18","hashOfConfig":"14"},{"size":4220,"mtime":1610884166634,"results":"19","hashOfConfig":"14"},{"size":2763,"mtime":1610883177571,"results":"20","hashOfConfig":"14"},{"size":3224,"mtime":1610883131136,"results":"21","hashOfConfig":"14"},{"size":2522,"mtime":1610883532530,"results":"22","hashOfConfig":"14"},{"size":443,"mtime":1610881263205,"results":"23","hashOfConfig":"14"},{"size":852,"mtime":1610879554159,"results":"24","hashOfConfig":"14"},{"size":432,"mtime":1610885892330,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"zcqo3y",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\index.js",[],["58","59"],"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\App.js",["60","61"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport InsuranceDataView from './views/index';\nclass App extends React.Component{\n\n  state = {loading:true}\n  render(){\n    const {loading} = this.state;\n    return (\n      <InsuranceDataView/>\n    )\n  }\n}\n\n/* function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n} */\n\nexport default App;\n","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\index.js",[],"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insuranceDataView.js",[],"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insurance\\components\\insuranceDataGrid.js",["62","63","64","65"],"import React, { Component } from 'react';\r\nimport './../../../assets/insuranceData.css';\r\nimport * as actions from './../../../actions/insuranceAction';\r\nimport InsuranceDataGridColumn from './insuranceDataGridColumn';\r\nimport {connect} from 'react-redux';\r\nimport Loadable from 'react-loadable';\r\n\r\nimport InsuranceDataFilter from './insuranceDataFilter';\r\n//import Popup from 'react-popup';\r\nconst {ColumnSelectorHelper, DataGrid} = Component\r\n\r\nconst columns = new InsuranceDataGridColumn();\r\n\r\nclass InsuranceDataGrid extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            gridHeightL: 100,\r\n            dataList: [],\r\n            gridColumns: columns.getColumnDef(this),\r\n            columnFilters: columns.getColumnDef(this).map(column =>{\r\n                return {key: column.field, name: column.headerName, type: 'string'}\r\n            }),\r\n            rowCount: 0,\r\n            filteredCount: false,\r\n            filteredRows: [],\r\n            selectedNodes: []\r\n        };\r\n\r\n        this.gridoptions = {\r\n            checkboxSelection: true,\r\n            columnDefs: this.state.gridColumns,\r\n            debug: true,\r\n            enableSorting: true,\r\n            enableFilter: true,\r\n            rowSelection: true,\r\n            rowSelection: \"single\",\r\n            defaultColDef: {\r\n                sortavle: true\r\n            },\r\n            client: this.props.client,\r\n            enableCellTextSelection: true,\r\n            \r\n        };\r\n        this.allColumnNames = {};\r\n    \r\n    }\r\n\r\n    onGridReadyCallback(){\r\n        this.setState({colSelectionState: this.dataGrid.gridColumnApi.getColumnState()})\r\n    }\r\n\r\n    openEditDetails = () => {\r\n       // Popup.plugines().editDetails();\r\n    }\r\n    \r\n    handleRowSelection = (params) => {\r\n        const selectedNodes = this.dataGrid.gridOptions.api.getSelectedNodes()\r\n\r\n        this.setState(\r\n            {\r\n                selectedNodes: selectedNodes\r\n            }\r\n        )\r\n        this.props.dspatch(actions.setInsuranceSelectedNodes(selectedNodes));\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        if(this.props.isLoading != nextProps.isLoading){\r\n            this.setState(\r\n                {\r\n                    filteredCount: false\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {isLoading} = this.props;\r\n        return (\r\n            <div>\r\n                <div style= {{display: 'flex'}}>\r\n                    <div className= 'ag-theme-dark' id='insurance-Grid'>\r\n                        <Loadable\r\n                            active= {isLoading}\r\n                            spinner= {true}\r\n                            zIndex= {1}>\r\n                                <DataGrid\r\n                                    gridOptions={this.gridOptions}\r\n                                    columnDefs= {this.state.gridColumns}\r\n                                    ref= {instance => this.dataGrid = instance}\r\n                                    rowData= {this.props.insuranceDataList || []}\r\n                                    gridOffset= {300}\r\n                                    onGridReadyCallback= {this.onGridReadyCallback.bind(this)}>\r\n\r\n                                    </DataGrid>\r\n                            </Loadable>\r\n                    </div>\r\n                    <div style = {{paddingTop: \"10px\"}}>\r\n                        <span className=\"footerStyle\"> Number of Rows: {this.state.filteredCount?this.state.rowCount:this.props.insuranceDataList.length}</span>\r\n\r\n                        <button class = \"btn-create\" style= {{float:\"right\", marginRight: \"10px\", marginTop:\"0.1px\"}} onClick={this.editDetails}>\r\n                            Edit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    var insuranceDataList= state.InsuranceReducer.insuranceDataList;\r\n    return {\r\n        InsuranceDataGridState: state.InsuranceReducer,\r\n        insuranceDataList,\r\n        isLoading: state.InsuranceReducer.isLoading\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(InsuranceDataGrid);","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insurance\\components\\insuranceDataFilter.js",["66","67","68","69"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './../../../assets/insuranceData.css';\r\nimport * as actions from './../../../actions/insuranceAction';\r\n//import {NotificationContainer} from 'react-notifications';\r\n\r\nclass InsuranceDataFilter extends Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tpolicy_id: '',\r\n\t\t\tcustomer_id: ''\r\n\t\t};\r\n\t}\r\n\t\r\n\t\r\n\tcomponentDidMount(){\r\n\t\tconst {client} = this.props;\r\n\t\tthis.client = client;\r\n\t}\r\n\t\r\n\tchangePolicyId = (e) => {\r\n\t\tlet value = e.target.value;\r\n\t\tthis.setState({\r\n\t\t'policy_id': value\r\n\t\t});\r\n\t\tthis.props.dispatch(actions.setPolicyId(value));\r\n\t\r\n\t}\r\n\t\r\n\t\tchangeCustomerId = (e) => {\r\n\t\tlet value = e.target.value;\r\n\t\tthis.setState({\r\n\t\t'customer_id': value\r\n\t\t});\r\n\t\tthis.props.dispatch(actions.setCustomerId(value));\r\n\t\r\n\t}\r\n\t\r\n\tsendFilter = () => {\r\n\t\tif(this.state.customer_id != '' && this.state.insuranceId != ''){\r\n\t\t\t//NotificationManager.warning('Please add only oner search criteria', '', 4000);\r\n\t\t}\r\n\t\telse if(this.state.customer_id != '') {\r\n\t\t\tthis.props.dispatch(actions.asyncGetInsuranceDataOnCustomerId(this.state.customer_id));\r\n\t\t} \r\n\t\telse if(this.state.policy_id != '') {\r\n\t\t\tthis.props.dispatch(actions.asyncGetInsuranceDataOnPolicyId(this.state.policy_id));\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//NotificationManager.warning('Please add one search criteria','',4000);\r\n\t\t}\r\n\t\t\t\t\r\n\t}\r\n\t\r\n\tclearFilter = () => {\r\n\t\tthis.setState(\r\n\t\t{\r\n\t\t\t'insurance_id': '',\r\n\t\t\t'customer_id': ''\r\n\t\t});\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"insurance-report-filter\">\r\n\t\t\t\t<div className=\"filter-topdiv\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className= \"filter-inputdiv\" style={{maxWidth:'11%'}}>\r\n\t\t\t\t\t\t<input id = \"pId\" type=\"text\" placeholder=\"Policy Number\" className=\"textinput\" value={this.state.policy_id}\r\n\t\t\t\t\t\t\tonChange={this.changePolicyId} style={{width: '100%'}}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className= \"filter-inputdiv\" style={{maxWidth:'11%'}}>\r\n\t\t\t\t\t\t<input id = \"cId\" type=\"text\" placeholder=\"Customer Id\" className=\"textinput\" value={this.state.customer_id}\r\n\t\t\t\t\t\t\tonChange={this.changeCustomerId} style={{width: '100%'}}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className= \"btn-inputdiv\">\r\n\t\t\t\t\t\t<button title= \"Submit\" className=\"button but--primary\" onClick={this.sendFilter}>\r\n\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className= \"btn-inputdiv\">\r\n\t\t\t\t\t\t<button title= \"Reset\" className=\"button but--primary\" onClick={this.clearFilter}>\r\n\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tinsuranceDataState: state.InsuranceReducer\r\n\t};\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps)(InsuranceDataFilter);\r\n\r\n","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insurance\\components\\insuranceDataGridColumn.js",["70","71"],"//import moment from 'moment';\r\n//import Popup from 'react-popup';\r\n\r\nclass InsuranceDataGridColumn{\r\n\r\n    getColumnDef(self){\r\n        let that = this;\r\n        return [\r\n            {\r\n                headername: \"Policy Id\",\r\n                field:\"policy_id\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Date of Purchase\",\r\n                field:\"date_of_purchase\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Customer Id\",\r\n                field:\"customer_id\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Fuel\",\r\n                field:\"fuel\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Vehicle Segment\",\r\n                field:\"vehicle_segment\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Premium\",\r\n                field:\"premium\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Bodily Injury Liability\",\r\n                field:\"bodily_injury_liability\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Personal Injury Protection\",\r\n                field:\"personal_injury_protection\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Property Damage Liability\",\r\n                field:\"property_damage_liability\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Collision\",\r\n                field:\"collision\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Comprehensive\",\r\n                field:\"comprehensive\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Gender\",\r\n                field:\"gender\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Income Group\",\r\n                field:\"income_group\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Region\",\r\n                field:\"region\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Marital Status\",\r\n                field:\"marital_status\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            }\r\n        ];\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        InsuranceDataGridState: state.InsuranceReducer\r\n    }\r\n}\r\n\r\nexport default (InsuranceDataGridColumn);","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\actions\\insuranceAction.js",["72","73"],"\r\nimport { SET_POLICY_ID, SET_CUSTOMER_ID, GET_INSURANCE_DATA_REQUEST, GET_INSURANCE_DATA_SUCCESS, GET_INSURANCE_DATA_FAILED, \r\n    SET_INSURANCE_DATA_SELECTED_DOC,EDIT_DETAILS} from './../constants/actionTypes';\r\nimport {getPolicyDetailsOnPolicyId,getPolicyDetailsOnCustomerId,editPolicyDetails} from '../service/insuranceService' ;\r\n\r\nexport function setPolicyId(value){\r\n    return {\r\n        type: SET_POLICY_ID,\r\n        payload: value\r\n    };\r\n}\r\n\r\nexport function setCustomerId(value){\r\n    return {\r\n        type: SET_CUSTOMER_ID,\r\n        payload: value\r\n    };\r\n}\r\n\r\nexport const asyncGetInsuranceDataOnCustomerId = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        dispatch({\r\n            type:GET_INSURANCE_DATA_REQUEST\r\n        });\r\n        getPolicyDetailsOnCustomerId(data)\r\n        .then((response)=> {\r\n            dispatch({\r\n                type: GET_INSURANCE_DATA_SUCCESS,\r\n                payload: response.data\r\n            });\r\n            resolve(response.data);\r\n        })\r\n        .catch(error=> {\r\n            dispatch({\r\n                type:GET_INSURANCE_DATA_FAILED,\r\n                error: error\r\n            });\r\n            reject(error);\r\n        });\r\n    });\r\n};\r\n\r\nexport const asyncGetInsuranceDataOnPolicyId = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        dispatch({\r\n            type:GET_INSURANCE_DATA_REQUEST\r\n        });\r\n        getPolicyDetailsOnPolicyId(data)\r\n        .then((response)=> {\r\n            dispatch({\r\n                type: GET_INSURANCE_DATA_SUCCESS,\r\n                payload: response.data\r\n            });\r\n            resolve(response.data);\r\n        })\r\n        .catch(error=> {\r\n            dispatch({\r\n                type:GET_INSURANCE_DATA_FAILED,\r\n                error: error\r\n            });\r\n            reject(error);\r\n        });\r\n    });\r\n};\r\n\r\n/* export const asyncEditDetails =(data)  => (dispatch,getState) => {\r\n    return new Promise((resolve,reject) => {\r\n        dispatch({\r\n            type:GET_INSURANCE_DATA_REQUEST\r\n        });\r\n        editPolicyDetails(data)\r\n        .then(handleSuccesForEditDetails(resolve,reject,dispatch,EDIT_DETAILS))\r\n        .then(function(){GET_INSURANCE_DATA_REQUEST(dispatch,getState)})\r\n        .catch(handleErrorForEditOwnership(dispatch,EDIT_DETAILS));\r\n    });\r\n} */\r\n\r\nexport const setInsuranceSelectedNodes = (selectedDocs) => {\r\n    return {\r\n        type: SET_INSURANCE_DATA_SELECTED_DOC,\r\n        data: selectedDocs\r\n    }\r\n}\r\n\r\n","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\constants\\actionTypes.js",[],["74","75"],"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\service\\insuranceService.js",[],"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\store.js",["76"],"import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\r\nimport promiseMiddleware from  'redux-promise-middleware';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducers from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default createStore(reducers, {}, composeEnhancers(applyMiddleware(\r\n    thunkMiddleware,\r\n    promiseMiddleware()\r\n)));",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"85","line":9,"column":12,"nodeType":"83","messageId":"84","endLine":9,"endColumn":19},{"ruleId":"81","severity":1,"message":"86","line":8,"column":8,"nodeType":"83","messageId":"84","endLine":8,"endColumn":27},{"ruleId":"81","severity":1,"message":"87","line":10,"column":8,"nodeType":"83","messageId":"84","endLine":10,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":37,"column":13,"nodeType":"90","messageId":"91","endLine":37,"endColumn":25},{"ruleId":"92","severity":1,"message":"93","line":69,"column":33,"nodeType":"94","messageId":"91","endLine":69,"endColumn":35},{"ruleId":"92","severity":1,"message":"93","line":42,"column":29,"nodeType":"94","messageId":"91","endLine":42,"endColumn":31},{"ruleId":"92","severity":1,"message":"93","line":42,"column":61,"nodeType":"94","messageId":"91","endLine":42,"endColumn":63},{"ruleId":"92","severity":1,"message":"93","line":45,"column":34,"nodeType":"94","messageId":"91","endLine":45,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":48,"column":32,"nodeType":"94","messageId":"91","endLine":48,"endColumn":34},{"ruleId":"81","severity":1,"message":"95","line":7,"column":13,"nodeType":"83","messageId":"84","endLine":7,"endColumn":17},{"ruleId":"81","severity":1,"message":"96","line":103,"column":7,"nodeType":"83","messageId":"84","endLine":103,"endColumn":22},{"ruleId":"81","severity":1,"message":"97","line":3,"column":37,"nodeType":"83","messageId":"84","endLine":3,"endColumn":49},{"ruleId":"81","severity":1,"message":"98","line":4,"column":65,"nodeType":"83","messageId":"84","endLine":4,"endColumn":82},{"ruleId":"77","replacedBy":"99"},{"ruleId":"79","replacedBy":"100"},{"ruleId":"81","severity":1,"message":"101","line":1,"column":22,"nodeType":"83","messageId":"84","endLine":1,"endColumn":37},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'InsuranceDataFilter' is defined but never used.","'ColumnSelectorHelper' is assigned a value but never used.","no-dupe-keys","Duplicate key 'rowSelection'.","ObjectExpression","unexpected","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'that' is assigned a value but never used.","'mapStateToProps' is assigned a value but never used.","'EDIT_DETAILS' is defined but never used.","'editPolicyDetails' is defined but never used.",["102"],["103"],"'combineReducers' is defined but never used.","no-global-assign","no-unsafe-negation"]