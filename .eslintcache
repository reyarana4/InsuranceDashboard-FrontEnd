[{"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\index.js":"1","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\reportWebVitals.js":"2","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\App.js":"3","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\index.js":"4","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insuranceDataView.js":"5","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insurance\\components\\insuranceDataGrid.js":"6","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insurance\\components\\insuranceDataFilter.js":"7","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insurance\\components\\insuranceDataGridColumn.js":"8","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\actions\\insuranceAction.js":"9","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\constants\\actionTypes.js":"10","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\service\\insuranceService.js":"11","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\store.js":"12","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\reducers\\insuranceReducer.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":767,"mtime":1610882613899,"results":"17","hashOfConfig":"15"},{"size":368,"mtime":1610886994804,"results":"18","hashOfConfig":"15"},{"size":753,"mtime":1610905776196,"results":"19","hashOfConfig":"15"},{"size":4215,"mtime":1610905786276,"results":"20","hashOfConfig":"15"},{"size":2757,"mtime":1610904183294,"results":"21","hashOfConfig":"15"},{"size":3220,"mtime":1610905797662,"results":"22","hashOfConfig":"15"},{"size":2537,"mtime":1610906043119,"results":"23","hashOfConfig":"15"},{"size":443,"mtime":1610881263205,"results":"24","hashOfConfig":"15"},{"size":860,"mtime":1610906676216,"results":"25","hashOfConfig":"15"},{"size":431,"mtime":1610887607360,"results":"26","hashOfConfig":"15"},{"size":1340,"mtime":1610879880701,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"zcqo3y",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":2,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\index.js",[],["60","61"],"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\App.js",["62","63"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport InsuranceDataView from './views/index';\nclass App extends React.Component{\n\n  state = {loading:true}\n  render(){\n    const {loading} = this.state;\n    return (\n      <InsuranceDataView/>\n    )\n  }\n}\n\n/* function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n} */\n\nexport default App;\n","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\index.js",[],"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insuranceDataView.js",["64"],"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insurance\\components\\insuranceDataGrid.js",["65"],"import React, { Component } from 'react';\r\nimport './../../../assets/insuranceData.css';\r\nimport * as actions from './../../../actions/insuranceAction';\r\nimport InsuranceDataGridColumn from './insuranceDataGridColumn';\r\nimport {connect} from 'react-redux';\r\nimport Loadable from 'react-loadable';\r\nimport InsuranceDataFilter from './insuranceDataFilter';/import Popup from 'react-popup';\r\nconst {ColumnSelectorHelper, DataGrid} = Component\r\n\r\nconst columns = new InsuranceDataGridColumn();\r\n\r\nclass InsuranceDataGrid extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            gridHeightL: 100,\r\n            dataList: [],\r\n            gridColumns: columns.getColumnDef(this),\r\n            columnFilters: columns.getColumnDef(this).map(column =>{\r\n                return {key: column.field, name: column.headerName, type: 'string'}\r\n            }),\r\n            rowCount: 0,\r\n            filteredCount: false,\r\n            filteredRows: [],\r\n            selectedNodes: []\r\n        };\r\n\r\n        this.gridoptions = {\r\n            checkboxSelection: true,\r\n            columnDefs: this.state.gridColumns,\r\n            debug: true,\r\n            enableSorting: true,\r\n            enableFilter: true,\r\n            rowSelection: true,\r\n            rowSelection: \"single\",\r\n            defaultColDef: {\r\n                sortavle: true\r\n            },\r\n            client: this.props.client,\r\n            enableCellTextSelection: true,\r\n            \r\n        };\r\n        this.allColumnNames = {};\r\n    \r\n    }\r\n\r\n    onGridReadyCallback(){\r\n        this.setState({colSelectionState: this.dataGrid.gridColumnApi.getColumnState()})\r\n    }\r\n\r\n    openEditDetails = () => {\r\n       // Popup.plugines().editDetails();\r\n    }\r\n    \r\n    handleRowSelection = (params) => {\r\n        const selectedNodes = this.dataGrid.gridOptions.api.getSelectedNodes()\r\n\r\n        this.setState(\r\n            {\r\n                selectedNodes: selectedNodes\r\n            }\r\n        )\r\n        this.props.dspatch(actions.setInsuranceSelectedNodes(selectedNodes));\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        if(this.props.isLoading != nextProps.isLoading){\r\n            this.setState(\r\n                {\r\n                    filteredCount: false\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {isLoading} = this.props;\r\n        return (\r\n            <div>\r\n                <div style= {{display: 'flex'}}>\r\n                    <div className= 'ag-theme-dark' id='insurance-Grid'>\r\n                        <Loadable\r\n                            active= {isLoading}\r\n                            spinner= {true}\r\n                            zIndex= {1}>\r\n                                <DataGrid\r\n                                    gridOptions={this.gridOptions}\r\n                                    columnDefs= {this.state.gridColumns}\r\n                                    ref= {instance => this.dataGrid = instance}\r\n                                    rowData= {this.props.insuranceDataList || []}\r\n                                    gridOffset= {300}\r\n                                    onGridReadyCallback= {this.onGridReadyCallback.bind(this)}>\r\n\r\n                                    </DataGrid>\r\n                            </Loadable>\r\n                    </div>\r\n                    <div style = {{paddingTop: \"10px\"}}>\r\n                        <span className=\"footerStyle\"> Number of Rows: {this.state.filteredCount?this.state.rowCount:this.props.insuranceDataList.length}</span>\r\n\r\n                        <button class = \"btn-create\" style= {{float:\"right\", marginRight: \"10px\", marginTop:\"0.1px\"}} onClick={this.editDetails}>\r\n                            Edit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    var insuranceDataList= state.InsuranceReducer.insuranceDataList;\r\n    return {\r\n        InsuranceDataGridState: state.InsuranceReducer,\r\n        insuranceDataList,\r\n        isLoading: state.InsuranceReducer.isLoading\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(InsuranceDataGrid);","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insurance\\components\\insuranceDataFilter.js",["66","67","68","69","70","71","72"],"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\views\\insurance\\components\\insuranceDataGridColumn.js",["73","74"],"//import moment from 'moment';\r\n//import Popup from 'react-popup';\r\n\r\nclass InsuranceDataGridColumn{\r\n\r\n    getColumnDef(self){\r\n        let that = this;\r\n        return [\r\n            {\r\n                headername: \"Policy Id\",\r\n                field:\"policy_id\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Date of Purchase\",\r\n                field:\"date_of_purchase\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Customer Id\",\r\n                field:\"customer_id\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Fuel\",\r\n                field:\"fuel\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Vehicle Segment\",\r\n                field:\"vehicle_segment\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Premium\",\r\n                field:\"premium\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Bodily Injury Liability\",\r\n                field:\"bodily_injury_liability\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Personal Injury Protection\",\r\n                field:\"personal_injury_protection\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Property Damage Liability\",\r\n                field:\"property_damage_liability\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Collision\",\r\n                field:\"collision\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Comprehensive\",\r\n                field:\"comprehensive\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Gender\",\r\n                field:\"gender\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Income Group\",\r\n                field:\"income_group\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Region\",\r\n                field:\"region\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            },\r\n            {\r\n                headername: \"Marital Status\",\r\n                field:\"marital_status\",\r\n                filter: 'agTextColumnFilter',\r\n                width: 50\r\n            }\r\n        ];\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        InsuranceDataGridState: state.InsuranceReducer\r\n    }\r\n}\r\n\r\nexport default (InsuranceDataGridColumn);","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\actions\\insuranceAction.js",["75","76"],"\r\nimport { SET_POLICY_ID, SET_CUSTOMER_ID, GET_INSURANCE_DATA_REQUEST, GET_INSURANCE_DATA_SUCCESS, GET_INSURANCE_DATA_FAILED, \r\n    SET_INSURANCE_DATA_SELECTED_DOC,EDIT_DETAILS} from './../constants/actionTypes';\r\nimport {getPolicyDetailsOnPolicyId,getPolicyDetailsOnCustomerId,editPolicyDetails} from '../service/insuranceService' ;\r\n\r\nexport function setPolicyId(value){\r\n    return {\r\n        type: SET_POLICY_ID,\r\n        payload: value\r\n    };\r\n}\r\n\r\nexport function setCustomerId(value){\r\n    return {\r\n        type: SET_CUSTOMER_ID,\r\n        payload: value\r\n    };\r\n}\r\n\r\nexport const asyncGetInsuranceDataOnCustomerId = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        dispatch({\r\n            type:GET_INSURANCE_DATA_REQUEST\r\n        });\r\n        getPolicyDetailsOnCustomerId(data)\r\n        .then((response)=> {\r\n            dispatch({\r\n                type: GET_INSURANCE_DATA_SUCCESS,\r\n                payload: response.data\r\n            });\r\n            resolve(response.data);\r\n        })\r\n        .catch(error=> {\r\n            dispatch({\r\n                type:GET_INSURANCE_DATA_FAILED,\r\n                error: error\r\n            });\r\n            reject(error);\r\n        });\r\n    });\r\n};\r\n\r\nexport const asyncGetInsuranceDataOnPolicyId = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        dispatch({\r\n            type:GET_INSURANCE_DATA_REQUEST\r\n        });\r\n        getPolicyDetailsOnPolicyId(data)\r\n        .then((response)=> {\r\n            dispatch({\r\n                type: GET_INSURANCE_DATA_SUCCESS,\r\n                payload: response.data\r\n            });\r\n            resolve(response.data);\r\n        })\r\n        .catch(error=> {\r\n            dispatch({\r\n                type:GET_INSURANCE_DATA_FAILED,\r\n                error: error\r\n            });\r\n            reject(error);\r\n        });\r\n    });\r\n};\r\n\r\n/* export const asyncEditDetails =(data)  => (dispatch,getState) => {\r\n    return new Promise((resolve,reject) => {\r\n        dispatch({\r\n            type:GET_INSURANCE_DATA_REQUEST\r\n        });\r\n        editPolicyDetails(data)\r\n        .then(handleSuccesForEditDetails(resolve,reject,dispatch,EDIT_DETAILS))\r\n        .then(function(){GET_INSURANCE_DATA_REQUEST(dispatch,getState)})\r\n        .catch(handleErrorForEditOwnership(dispatch,EDIT_DETAILS));\r\n    });\r\n} */\r\n\r\nexport const setInsuranceSelectedNodes = (selectedDocs) => {\r\n    return {\r\n        type: SET_INSURANCE_DATA_SELECTED_DOC,\r\n        data: selectedDocs\r\n    }\r\n}\r\n\r\n","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\constants\\actionTypes.js",[],"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\service\\insuranceService.js",["77","78","79"],"class insuranceService{\r\n    constructor(client) {\r\n        this.client = client;\r\n    }\r\n\r\n\r\ngetPolicyDetailsOnPolicyId(policy_id){\r\n    console.log(\"Policy id\"+ policy_id);\r\n    let test = this.client.get(\"http://127.0.0.1:8000/get-using-policy/\",policy_id);\r\n    console.log(test, \"PolicyDetails\");\r\n    return test;\r\n}\r\n\r\n\r\ngetPolicyDetailsOnCustomerId(customer_id){\r\n    console.log(\"customer_id id\"+ customer_id);\r\n    let test = this.client.get(\"http://127.0.0.1:8000/get-using-customer/\",customer_id);\r\n    console.log(test, \"PolicyDetails\");\r\n    return test;\r\n}\r\n\r\neditPolicyDetails(policy_id,data){\r\n    console.log(data);\r\n    console.log(\"Policy id\"+ policy_id);\r\n    let test = this.client.get(\"http://127.0.0.1:8000/edit/\",policy_id);\r\n    console.log(test, \"PolicyDetails\");\r\n    return test;\r\n}\r\neditPolicyDetails(data){\r\n    console.log(data);\r\n    console.log(\"Policy id\"+ policy_id);\r\n    let test = this.client.get(\"http://127.0.0.1:8000/edit/\",policy_id);\r\n    console.log(test, \"PolicyDetails\");\r\n    return test;\r\n}\r\n}\r\n\r\nmodule.exports = insuranceService;","C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\store.js",[],"C:\\Users\\risha\\Documents\\front-end\\Reya\\insurance-dashboard\\src\\reducers\\insuranceReducer.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":12},{"ruleId":"84","severity":1,"message":"88","line":9,"column":12,"nodeType":"86","messageId":"87","endLine":9,"endColumn":19},{"ruleId":"84","severity":1,"message":"89","line":6,"column":9,"nodeType":"86","messageId":"87","endLine":6,"endColumn":30},{"ruleId":null,"fatal":true,"severity":2,"message":"90","line":7,"column":58},{"ruleId":"84","severity":1,"message":"89","line":5,"column":9,"nodeType":"86","messageId":"87","endLine":5,"endColumn":30},{"ruleId":"91","severity":1,"message":"92","line":42,"column":29,"nodeType":"93","messageId":"94","endLine":42,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":42,"column":61,"nodeType":"93","messageId":"94","endLine":42,"endColumn":63},{"ruleId":"95","severity":2,"message":"96","line":43,"column":4,"nodeType":"86","messageId":"97","endLine":43,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":45,"column":34,"nodeType":"93","messageId":"94","endLine":45,"endColumn":36},{"ruleId":"91","severity":1,"message":"92","line":48,"column":32,"nodeType":"93","messageId":"94","endLine":48,"endColumn":34},{"ruleId":"95","severity":2,"message":"96","line":52,"column":4,"nodeType":"86","messageId":"97","endLine":52,"endColumn":23},{"ruleId":"84","severity":1,"message":"98","line":7,"column":13,"nodeType":"86","messageId":"87","endLine":7,"endColumn":17},{"ruleId":"84","severity":1,"message":"99","line":103,"column":7,"nodeType":"86","messageId":"87","endLine":103,"endColumn":22},{"ruleId":"84","severity":1,"message":"100","line":3,"column":37,"nodeType":"86","messageId":"87","endLine":3,"endColumn":49},{"ruleId":"84","severity":1,"message":"101","line":4,"column":65,"nodeType":"86","messageId":"87","endLine":4,"endColumn":82},{"ruleId":"102","severity":1,"message":"103","line":29,"column":1,"nodeType":"104","messageId":"94","endLine":35,"endColumn":2},{"ruleId":"95","severity":2,"message":"105","line":31,"column":30,"nodeType":"86","messageId":"97","endLine":31,"endColumn":39},{"ruleId":"95","severity":2,"message":"105","line":32,"column":62,"nodeType":"86","messageId":"97","endLine":32,"endColumn":71},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'NotificationContainer' is defined but never used.","Parsing error: Unterminated regular expression\n\n\u001b[0m \u001b[90m  5 | \u001b[39m\u001b[36mimport\u001b[39m {connect} from \u001b[32m'react-redux'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  6 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mLoadable\u001b[39m from \u001b[32m'react-loadable'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mInsuranceDataFilter\u001b[39m from \u001b[32m'./insuranceDataFilter'\u001b[39m\u001b[33m;\u001b[39m\u001b[33m/\u001b[39m\u001b[36mimport\u001b[39m \u001b[33mPopup\u001b[39m from \u001b[32m'react-popup'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m\u001b[36mconst\u001b[39m {\u001b[33mColumnSelectorHelper\u001b[39m\u001b[33m,\u001b[39m \u001b[33mDataGrid\u001b[39m} \u001b[33m=\u001b[39m \u001b[33mComponent\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[36mconst\u001b[39m columns \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInsuranceDataGridColumn\u001b[39m()\u001b[33m;\u001b[39m\u001b[0m","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-undef","'NotificationManager' is not defined.","undef","'that' is assigned a value but never used.","'mapStateToProps' is assigned a value but never used.","'EDIT_DETAILS' is defined but never used.","'editPolicyDetails' is defined but never used.","no-dupe-class-members","Duplicate name 'editPolicyDetails'.","MethodDefinition","'policy_id' is not defined.","no-global-assign","no-unsafe-negation"]